{"cells":[{"cell_type":"code","source":"# project/config.py\nimport os\nimport torch\n\nclass Config:\n    \"\"\"Zentrale Konfigurationsklasse.\"\"\"\n    # System & Logging\n    LOG_LEVEL = os.getenv('LOG_LEVEL', 'INFO')\n    MODEL_SAVE_PATH = \"saved_models/\"\n\n    # Datenverarbeitung\n    DATA_WINDOW_SIZE = 60\n    DATA_PREDICTION_LENGTH = 5\n    MIN_VOLATILITY = 1e-9\n\n    # Hyperparameter (Default-Werte)\n    LSTM_HPARAMS = {\n        'hidden_dim': 128, 'n_layers': 2, 'dropout_prob': 0.3,\n        'learning_rate': 1e-3, 'epochs': 100,\n        'weight_decay': 1e-5,\n        'teacher_forcing_ratio': 0.5\n    }\n    XGBOOST_HPARAMS = {\n        'n_estimators': 200, 'learning_rate': 0.05, 'max_depth': 5,\n        'subsample': 0.8, 'colsample_bytree': 0.8, 'objective': 'reg:squarederror',\n        'device': 'cuda' if torch.cuda.is_available() else 'cpu',\n        'reg_alpha': 0.1,\n        'reg_lambda': 1.0\n    }\n    \n    # Trainings-Kontrolle\n    EARLY_STOPPING_PATIENCE = 10\n\n    # Tuning & Backtesting\n    OPTUNA_N_TRIALS = 50 # NEU: Anzahl der Versuche f√ºr die Hyperparameter-Suche\n    OPTUNA_TIMEOUT = 3600\n    BACKTEST_INITIAL_CASH = 100000.0\n    BACKTEST_COMMISSION = 0.001\n    RISK_FREE_RATE = 0.01\n    RISK_PER_TRADE = 0.01\n\n    # Web & Celery\n    CELERY_BROKER_URL = os.getenv('CELERY_BROKER_URL', 'redis://localhost:6379/0')\n    CELERY_RESULT_BACKEND = os.getenv('CELERY_RESULT_BACKEND', 'redis://localhost:6379/0')\n    \n    # GCS\n    GCS_BUCKET_NAME = os.getenv('GCS_BUCKET_NAME', \"your-ml-models-bucket\")\n    GCS_PROJECT_ID = os.getenv('GCS_PROJECT_ID', None)\n    \n    # MLflow\n    MLFLOW_TRACKING_URI = os.getenv('MLFLOW_TRACKING_URI', 'http://mlflow:5000')\n    MLFLOW_EXPERIMENT_NAME = \"PercolationTradingSystem\"","outputs":[],"execution_count":null,"metadata":{}}],"metadata":{"colab":{"from_bard":true},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}